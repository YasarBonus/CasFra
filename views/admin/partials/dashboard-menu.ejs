<div class="ui small wrapping menu">
  <% if (user.permissions.includes('viewDashboard')) { %>
  <a class="item" href="/dashboard">Dashboard</a>
  <% } %>
  <% if (user.permissions.includes('manageCasinos')) { %>
  <a class="item" href="/dashboard/casinos">Casinos</a>
  <% } %>

  <% if (user.permissions.includes('manageCasinos')) { %>
  <div class="ui dropdown item">
    Datasets <i class="dropdown icon"></i>
    <div class="menu">
      <a href="/dashboard/casinos/categories" class="item">Casino Categories</a>
      <a href="/dashboard/casinos/tags" class="item">Casino Tags</a>
      <a href="/dashboard/casinos/features" class="item">Casino Features</a>
      <a href="/dashboard/casinos/providers" class="item">Casino Providers</a>
      <a href="/dashboard/casinos/paymentmethods" class="item">Casino Payment Methods</a>
      <a href="/dashboard/casinos/licenses" class="item">Casino Licenses</a>
    </div>
  </div>
  <% } %>

  <% if (user.permissions.includes('manageLinks')) { %>
  <div class="ui dropdown item">
    ShortLinks <i class="dropdown icon"></i>
    <div class="menu">
      <a href="/dashboard/shortlinks" class="item">Manage</a>
      <a href="/dashboard/shortlinks/hits" class="disabled item">Hits</a>
    </div>
  </div>
  <% } %>
  <% if (user.permissions.includes('manageTwitchWishListBot')) { %>
    <div class="ui dropdown item">
      Utilities <i class="dropdown icon"></i>
      <div class="menu">
        <a href="/dashboard/utils/twitch/wishlistbot" class="item">Twitch Wishlist Bot</a>
      </div>
    </div>
    <% } %>
  <% if (user.permissions.includes('manageImages') || user.permissions.includes('manageImagesCategories')) { %>
  <div class="ui dropdown item">
    Images <i class="dropdown icon"></i>
    <div class="menu">
      <% if (user.permissions.includes('manageImages')) { %>
      <a class="item" href="/dashboard/images">Images</a>
      <% } %>
      <% if (user.permissions.includes('manageImagesCategories')) { %>
      <a class="item" href="/dashboard/images/categories">Image Categories</a>
      <% } %>
    </div>
  </div>
  <% } %>
  
  <div class="right menu">
       

  </div>

</div>

<div id="breadcrumb"></div>

<script>
  var currentUri = window.location.pathname;
  var uriParts = currentUri.split('/').filter(part => part !== '');
  var breadcrumbHtml = 'You are here: <div class="ui breadcrumb">';
  uriParts.forEach((part, index) => {
    breadcrumbHtml += '<a href="/' + uriParts.slice(0, index + 1).join('/') + '" class="section">' + part + '</a>';
    if (index !== uriParts.length - 1) {
      breadcrumbHtml += '<i class="right angle icon divider"></i>';
    }
  });
  breadcrumbHtml += '</div>';
  document.getElementById("breadcrumb").innerHTML = breadcrumbHtml;
</script>

<div id="statusLabel" style="display:none;" class="ui fluid top attached label"></div>

<script>

document.addEventListener("DOMContentLoaded", function() {
  fetchTenancies();
  getUserDetails();
  getUserTenancy();
});


  async function updateStatus(status, message) {
    return new Promise((resolve, reject) => {
      var label = document.getElementById("statusLabel");

      console.log("updateLabel: " + status + " " + message);

      if (status === "loading") {
        style = "gray";
        icon = '<i class="fa fa-spinner fa-spin"></i> ';
        content = message;
        label.style.display = "block";

        showFetchingIndicator();
      }


      if (status === "success") {
        style = "green";
        content = "Ok";
        icon = '<i class="check icon"></i> ';
        label.style.display = "none";
        hideFetchingIndicator();
      }

      label.className = "ui fluid top attached label " + style;
      label.innerHTML = icon + content;

      resolve();
    });
  }

  showActionButton('logoutButton', 'logout');
  callLogoutAPI = () => {
    showActionButton('logoutButton', 'loading');
    $.ajax({
      url: '/api/v1/auth/logout',
      type: 'POST',
      success: function (result) {
        window.location.href = '/login';
      }
    });
  };

  $('.ui.dropdown')
    .dropdown();
</script>

<!--  Additional Code only for users -->

<% if (user) { %>

<script>
  function getUserDetails() {
    fetch('/api/v1/user')
      .then(response => response.json())
      .then(data => {
        const user = data;

        // find the tenancy dropdown
        const accountMenuUsername = document.getElementById('accountMenuUsername');
        accountMenuUsername.textContent = user.username + " (" + user.points.points + " Points)";
      })
      .catch(error => {
        console.error('Error fetching user details:', error);
      });
  }


  function getUserTenancy() {
    fetch('/api/v1/user/tenancy')
      .then(response => response.json())
      .then(data => {
        const tenancy = data;

        // find the tenancy dropdown
        const tenancyMenuName = document.getElementById('tenancyMenuName');
        tenancyMenuName.textContent = tenancy.name || "Select Tenant";
      })
      .catch(error => {
        console.error('Error fetching user tenancy:', error);
      });
  }



  function fetchTenancies() {
    fetch('/api/v1/user/tenancies')
      .then(response => response.json())
      .then(data => {
        const dropdownMenu = document.querySelector('.tenancies.dropdown .menu');
        dropdownMenu.innerHTML = '';

        data.forEach(tenancy => {
          const item = document.createElement('a');
          item.classList.add('item');
          item.onclick = switchTenancy(tenancy._id);
          item.textContent = tenancy.name + ' (' + tenancy._id + ')';
          dropdownMenu.appendChild(item);
        });

        const divider = document.createElement('div');
        divider.classList.add('divider');
        dropdownMenu.appendChild(divider);


        const leaveTenancyItem = document.createElement('a');
        leaveTenancyItem.classList.add('item');
        leaveTenancyItem.onclick = leaveTenancy();
        leaveTenancyItem.textContent = 'Leave current Tenant';
        dropdownMenu.appendChild(leaveTenancyItem);

        $('.tenancies.dropdown').dropdown();
      })
      .catch(error => {
        console.error('Error fetching tenancies:', error);
      });
  }

 function leaveTenancy() {
    return () => {
      fetch(`/api/v1/user/tenancy`, {
          method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
          window.location.reload();
        })
        .catch(error => {
          console.error('Error leaving tenancy:', error);
        });
    };
  }

  function switchTenancy(tenancyId) {
    return () => {
      fetch(`/api/v1/user/tenancy/${tenancyId}`, {
          method: 'PUT'
        })
        .then(response => response.json())
        .then(data => {
          window.location.reload();
        })
        .catch(error => {
          console.error('Error switching tenancy:', error);
        });
    };
  }
</script>

<script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
<script>
  // Clientseite
const socket = io('http://127.0.0.1:3000');

// HÃ¶ren Sie auf eine Benachrichtigung vom Server
socket.on('notification', (data) => {
  console.log('Benachrichtigung vom Server:', data);
});

// Senden Sie eine Benachrichtigung an den Server
socket.emit('notification', { message: 'Hallo Server!' });
</script>

<% } %>

<!-- Rest of the code... -->