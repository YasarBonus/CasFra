<!-- media.ejs -->
<!DOCTYPE html>
<html>
<%- include('../partials/head') %>
<%- include('../partials/header') %>

<!-- FÃ¼gen Sie die DataTables CSS und JavaScript Bibliotheken hinzu -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css">
<script type="text/javascript" src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>


<!-- those 2 belong together! -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/scroller/2.3.0/css/scroller.dataTables.min.css">
<script type="text/javascript" src="https://cdn.datatables.net/scroller/2.3.0/js/dataTables.scroller.min.js"></script>


<!-- those 2 belong together! -->
<script type="text/javascript" src="https://cdn.datatables.net/plug-ins/1.13.7/dataRender/datetime.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

<!-- those 2 belong together! -->
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.7.1/js/dataTables.buttons.min.js"></script>

<body>
    <div class="ui wide container" style="margin-top: 100px !important; padding-bottom: 100px;">
        <div class="ui segment">
            <%- include('./partials/dashboard-menu') %>
            <div class="ui segment">
                <div class="ui container">
                    <h2>Super: All Tasks</h2>
                    <table id="tasksTable" class="stripe row-border nowrap hover compact" style="width:100%">
                        <thead>
                            <tr>
                                <th>Task ID</th>
                                <th>Name</th>
                                <th>Status</th>
                                <th>Attached to</th>
                                <th>Created by</th>
                                <th>Creation Date</th>
                                <th>Actions</th>
                                <!-- Add more columns here based on the data you want to display -->
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <%- include('../partials/footer') %>
    <script>
        $(document).ready(function () {
            getTasks();
        });

        let tasksTable;

        function getTasks() {
            // Show the loading indicator
            $('#fetchingIndicator').show();

            // If the table has already been initialized, simply update it
            if (tasksTable) {
                tasksTable.ajax.reload();
                return;
            }

            // Initialize the DataTable and populate it with data from your API endpoint
            tasksTable = $('#tasksTable').DataTable({
                serverSide: true,
                processing: true,
                scrollCollapse: true,
                fixedHeader: true,
                deferRender: true,
                pageLength: 10,
                order: [[4, 'desc']],
                ajax: {
                    url: '/api/v1/tasks/super',
                    data: function (d) {
                        d.page = d.start / d.length + 1;
                        d.search = d.search.value;
                        d.sort = d.columns[d.order[0].column].data;
                        d.sort = d.columns[d.order[0].column].data;
                    },
                },
                columnDefs: [{
                    targets: '_all',
                    className: 'dt-body-center'
                }],
                columns: [
                    {
                        data: function (row) {
                            if (row.id) {
                                return row.id;
                            } else if (row._id) {
                                return row._id;
                            }
                        }
                    },
                    {
                        data: 'name',
                    },
                    {
                        data: function (row) {
                            return row.status.status + '<br>(' + moment(row.status.date).format('DD.MM.YYYY HH:mm:ss') + ')';
                        }
                    },
                    {
                        data: function (row) {
                            if (row.service) {
                                return 'Service<br>' + row.service.name;
                            } else if (row.order) {
                                return 'Order<br>' + row.order.order_number;
                            } else {
                                return 'unknown';
                            }
                        }
                    },
                    {
                        data: function (row) {
                            if (row.user) {
                                return 'User<br>' + row.user.username;
                            } else if (row.tenant) {
                                return 'Tenant<br>' + row.tenant.name;
                            } else {
                                return 'unknown';
                            }
                        }
                    },
                    {
                        data: 'date',
                        render: function (data, type, row) {
                            return moment(data).format('DD.MM.YYYY HH:mm:ss');
                        }
                    },
                    {
                        data: 'id',
                        render: function (data, type, row) {
                            return '<button class="ui button" onclick="editTask(' + data +
                                ')">Edit</button>';
                        }
                    }
                    // Add more columns here based on the data you want to display
                ],
                drawCallback: function () {
                    $('#fetchingIndicator').hide();
                }
            });

            // Add a click event handler to the rows
            $('#tasksTable tbody').on('click', 'tr', function () {
                var tr = $(this);
                var row = tasksTable.row(tr);

                if (row.child.isShown()) {
                    // If the detail row is already shown, hide it
                    row.child.hide();
                    tr.removeClass('shown');
                } else {
                    // Otherwise, fetch the details and show them
                    $.get('/api/v1/tasks/super/' + row.data()._id, function (taskDetails) {
                        row.child(format(taskDetails)).show();
                        tr.addClass('shown');
                    });
                }
            });

            // A function to format the task details
            function format(taskDetails) {
                // for each task.logs entry, create a new displayable log entry
                let logs = '';
                for (let i = 0; i < taskDetails.logs.length; i++) {
                    logs += '<p>' + taskDetails.logs[i].date + ': ' + taskDetails.logs[i].message + '</p>';
                }
                return '<div class="ui segment">' +
                    '<h4>Task Details</h4>' +
                    '<div class="ui small cards">' +
                        '<div class="card">' +
                            '<div class="content">' +
                                '<div class="header">' + taskDetails._id + '</div>' +
                                '<div class="description">Task ID</div>' +
                            '</div>' +
                        '</div>' +
                        '<div class="card">' +
                            '<div class="content">' +
                                '<div class="header">' + taskDetails.name + '</div>' +
                                '<div class="description">Task Name</div>' +
                            '</div>' +
                        '</div>' +
                        '<div class="card">' +
                            '<div class="content">' +
                                '<div class="header">' + taskDetails.status.status + '</div>' +
                                '<div class="description">Status</div>' +
                            '</div>' +
                        '</div>' +
                        '<div class="card">' +
                            '<div class="content">' +
                                '<div class="header">' + taskDetails.service + '</div>' +
                                '<div class="description">Attached to</div>' +
                            '</div>' +
                        '</div>' +
                        '<div class="card">' +
                            '<div class="content">' +
                                '<div class="header">' + (taskDetails.user ? 'User<br>' + taskDetails.user.username : taskDetails.tenant.name + '<br><small>(Tenant)</small>') + '</div>' +
                                '<div class="description">Created by</div>' +
                            '</div>' +
                        '</div>' +
                        '<div class="card">' +
                            '<div class="content">' +
                                '<div class="header">' + moment(taskDetails.date).format('DD.MM.YYYY HH:mm:ss') + '</div>' +
                                '<div class="description">Creation Date</div>' +
                            '</div>' +
                        '</div>' +
                    '</div>' +
                    '<h4>Logs</h4>' +
                    logs +
                    '</div>';
            }

        }

        function editTask(id) {
            window.location.href = '/dashboard/super/task/' + id + '/edit';
        }
    </script>
</body>

</html>